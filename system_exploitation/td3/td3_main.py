import unittest
import tempfile
import os




def file_grep_string(path_in,target):
    with open(path_in,"r") as fd:
        lignes = fd.readlines()
        cpt_line = 0
        for ligne in lignes:
            cpt_line +=1
            cpt_inline = 0
            for c in ligne:
                if c == target:
                    print(cpt_line,cpt_inline)
                cpt_inline+=1
                
                
            
class TestBasicFileGrepString(unittest.TestCase):
    def test_empty_file(self):
        tmp_f = tempfile.NamedTemporaryFile()
        tmp_f.flush()

        prev = os.dup(1)
        os.close(1)
        _ = os.open('__buffer__', os.O_CREAT | os.O_WRONLY | os.O_TRUNC)
        file_grep_string(tmp_f.name, 'a')
        os.dup2(prev, 1)

        tmp_f.close()
        with open('__buffer__') as exec_res:
            good_lines = []
            exec_lines = exec_res.readlines()
            self.assertListEqual(good_lines, exec_lines)
        
        os.unlink('__buffer__')

    def test_simple_search(self):
        tmp_f = tempfile.NamedTemporaryFile(mode='w')
        tmp_f.writelines([
            "123\n",
            "abc\n",
            "ABC\n"
        ])
        tmp_f.flush()

        prev = os.dup(1)
        os.close(1)
        _ = os.open('__buffer__', os.O_CREAT | os.O_WRONLY | os.O_TRUNC)
        file_grep_string(tmp_f.name, 'abc')
        os.dup2(prev, 1)

        tmp_f.close()
        with open('__buffer__') as exec_res:
            good_lines = ['1:0\n']
            exec_lines = exec_res.readlines()
            self.assertListEqual(good_lines, exec_lines)

if __name__ == "__main__":
    unittest.main()